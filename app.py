
import streamlit as st
import pandas as pd
from pytrends.request import TrendReq
import altair as alt

st.set_page_config(page_title="Google Trends ‚Äì Full Market Analysis", layout="wide")
st.title("üìà –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–ø—Ä–æ—Å–∞ –Ω–∞ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏ –≤ –ï–≤—Ä–æ–ø–µ")

keywords = ['air pollution modeling', 'air dispersion modeling', 'noise mapping', 'environmental noise modeling', 'air quality monitoring', 'industrial risk assessment', 'chemical accident modeling', 'risk zone simulation', 'environmental impact assessment', 'geo-environmental consulting', 'air quality simulation', 'dispersion modeling', 'sound propagation model', 'traffic noise simulation', 'consequence modeling software']

geo_options = {
    "–ï–≤—Ä–æ–ø–∞ (–≤—Å—è)": "",
    "–ì–µ—Ä–º–∞–Ω–∏—è": "DE",
    "–§—Ä–∞–Ω—Ü–∏—è": "FR",
    "–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã": "NL",
    "–®–≤–µ—Ü–∏—è": "SE",
    "–§–∏–Ω–ª—è–Ω–¥–∏—è": "FI",
    "–ù–æ—Ä–≤–µ–≥–∏—è": "NO",
    "–õ–∞—Ç–≤–∏—è": "LV",
    "–ü–æ–ª—å—à–∞": "PL",
    "–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è": "GB"
}

st.sidebar.header("üîç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞")
geo_label = st.sidebar.selectbox("–°—Ç—Ä–∞–Ω–∞", list(geo_options.keys()))
geo = geo_options[geo_label]
kw_selected = st.sidebar.multiselect("–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞", keywords, default=keywords[:5])

if st.sidebar.button("üìä –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑"):
    pytrends = TrendReq(hl="en-US", tz=360)
    pytrends.build_payload(kw_selected, cat=0, timeframe="today 5-y", geo=geo)
    data = pytrends.interest_over_time()

    if data.empty:
        st.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.")
    else:
        data = data.reset_index()
        df = pd.melt(data, id_vars=["date"], value_vars=kw_selected,
                     var_name="keyword", value_name="interest")

        st.altair_chart(
            alt.Chart(df).mark_line().encode(
                x="date:T",
                y="interest:Q",
                color="keyword:N",
                tooltip=["date:T", "keyword:N", "interest:Q"]
            ).properties(width=900, height=500),
            use_container_width=True
        )

        csv = df.to_csv(index=False).encode("utf-8")
        st.download_button("üì• –°–∫–∞—á–∞—Ç—å CSV", csv, "trends_data.csv", "text/csv")
else:
    st.info("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —Å–ª–µ–≤–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É.")
