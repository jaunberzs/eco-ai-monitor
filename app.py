
import streamlit as st
import requests
import json

st.title("üåç TED Market Analyzer ‚Äî API –ü–æ–∏—Å–∫ —Ç–µ–Ω–¥–µ—Ä–æ–≤ –≤ —ç–∫–æ–ª–æ–≥–∏–∏")
st.write("### –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ TED API. –£—Ç–æ—á–Ω—ë–Ω —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ –æ—Ç –æ—à–∏–±–æ–∫.")

keywords = st.text_input("üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):", "air quality, emission, dispersion, monitoring, risk")

countries = st.multiselect("üåê –°—Ç—Ä–∞–Ω—ã:", ["DE", "LV", "PL", "FI", "SE", "NO", "FR", "IT", "ES", "NL", "BE", "DK", "CZ", "EE", "LT", "AT", "SK", "SI", "PT", "HU", "RO", "HR", "BG", "IE", "GR"], default=["DE", "LV", "PL"])

limit = st.slider("üìä –õ–∏–º–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤", 1, 100, 10)

if st.button("üîç –ù–∞–π—Ç–∏ —Ç–µ–Ω–¥–µ—Ä—ã"):
    st.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ TED API...")

    # –ü—Ä–∏–º–µ—Ä–Ω—ã–π endpoint TED API v3 (–∑–∞–≥–ª—É—à–∫–∞, –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
    url = "https://ted.europa.eu/api/v3/notices/search"

    # –ü—Ä–∏–º–µ—Ä —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ (–ø–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π API TED)
    payload = {
        "keyword": keywords,
        "limit": limit,
        "countryList": countries
    }

    try:
        response = requests.post(url, json=payload)
        st.text(f"–ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: {response.status_code}")

        if response.status_code == 200:
            if response.text.strip() == "":
                st.error("‚ùå –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç TED API.")
            else:
                try:
                    data = response.json()
                    st.success("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã!")
                    st.json(data)
                except json.JSONDecodeError:
                    st.error("‚ùå –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è JSON.")
                    st.code(response.text, language='html')
        else:
            st.error(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            st.code(response.text, language='html')

    except Exception as e:
        st.error(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
